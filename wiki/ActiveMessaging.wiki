#summary Start Here! - Wiki home for ActiveMessaging

= ActiveMessaging =

!ActiveMessaging is an attempt to bring the simplicity and elegance of rails development to the world of messaging. Messaging, (or event-driven architecture) is widely used for enterprise integration, with frameworks such as Java's JMS, and products such as ActiveMQ, Tibco, IBM MQSeries, etc.

ActiveMessaging is a generic framework to ease using messaging, but is not tied to any particular messaging system - in fact, it now has support for Stomp, JMS (using StompConnect), WebSphere MQ, and Amazon Simple Queue Service (SQS).

Here's a sample of a processor class that handles incoming messages:
{{{
class HelloWorldProcessor < ActiveMessaging::Processor
  
  subscribes_to :hello_world
  
  def on_message(message)
    puts "received: " + message
  end
  
end
}}}

= Getting Started =

Here are the best beginner guides:
 * [Installation] - get ActiveMessaging, stomp, and activemq
 * [TenMinuteIntroduction] - quick intro on sending and receiving

Then after you get through that, learn more wih these:
 * [Configuration] - more advanced configuration described
 * [ExceptionHandling] - advice and recipes for better exception handling


= ActiveMessaging articles elsewhere =
 * [http://www.infoq.com/articles/intro-active-messaging-rails Intro to ActiveMessaging on InfoQ] - Still mostly current/complete intro.
 * [http://beechbonanza.blogspot.com/2007/06/asynchronous-messaging-with-rails.html Asynchronous Messaging with Rails] - example and explanation of using a13g with AR observers, discussion of a13g as alternative to REST integration. 
 * [http://notdennisbyrne.blogspot.com/2007/06/integrating-rails-and-activemq-with.html Integrating Rails and ActiveMQ with ActiveMessaging/REST] - uses ActiveMQ's demo chat app on jetty interacting with a rails app using a13g.
 * [http://blog.snowonrails.com/articles/2007/05/31/how-to-build-a-mini-youtube-using-activemessaging-plugin-and-amazon-s3  How to build a mini youtube using activemessaging plugin and amazon s3] - title says it all.

= Developers =

[http://code.google.com/p/activemessaging/source Source code] is available via subversion here on google code:

{{{
svn checkout http://activemessaging.googlecode.com/svn/trunk/ activemessaging
}}}

= Support =

Best bet is the google groups mailing list:

http://groups.google.com/group/activemessaging-discuss

ou can also try the public Campfire chat room here:

https://thoughtworks.campfirenow.com/c94cd
Please provide your full real name.
